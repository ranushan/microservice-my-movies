{"version":3,"file":"getJsonSchema.js","sourceRoot":"","sources":["../../../src/jsonschema/utils/getJsonSchema.ts"],"names":[],"mappings":";;AAEA,2EAAsE;AAEtE,MAAM,MAAM,GAAgC,IAAI,GAAG,EAAE,CAAC;AAEtD,SAAgB,aAAa,CAAC,MAAiB;IAC7C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;QACvB,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,yCAAmB,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC;KACrE;IAED,OAAO,MAAM,CAAC,GAAG,CAAC,MAAM,CAAE,CAAC;AAC7B,CAAC;AAND,sCAMC;AAED,SAAgB,YAAY,CAAC,MAAiB;IAC5C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACxB,CAAC;AAFD,oCAEC","sourcesContent":["import {Type} from \"@tsed/core\";\nimport {JSONSchema6} from \"json-schema\";\nimport {JsonSchemesRegistry} from \"../registries/JsonSchemesRegistry\";\n\nconst caches: Map<Type<any>, JSONSchema6> = new Map();\n\nexport function getJsonSchema(target: Type<any>): JSONSchema6 {\n  if (!caches.has(target)) {\n    caches.set(target, JsonSchemesRegistry.getSchemaDefinition(target));\n  }\n\n  return caches.get(target)!;\n}\n\nexport function deleteSchema(target: Type<any>) {\n  caches.delete(target);\n}\n"]}