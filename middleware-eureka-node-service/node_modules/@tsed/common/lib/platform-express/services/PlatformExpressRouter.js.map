{"version":3,"file":"PlatformExpressRouter.js","sourceRoot":"","sources":["../../../src/platform-express/services/PlatformExpressRouter.ts"],"names":[],"mappings":";;;AAAA,iCAAkF;AAClF,mCAAmC;AACnC,6CAAwF;AASxF,IAAa,qBAAqB,GAAlC,MAAa,qBAAsB,SAAQ,yBAAc;IACvD,YACE,QAAyB,EACR,aAA4B,EACZ,aAAkB;QAEnD,KAAK,CAAC,QAAQ,CAAC,CAAC;QAEhB,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC,CAAC;IACrF,CAAC;CACF,CAAA;AAVY,qBAAqB;IADjC,qBAAgB,CAAC,yBAAc,CAAC;IAI5B,mBAAA,kBAAa,EAAE,CAAA;IACf,mBAAA,WAAM,CAAC,kCAAuB,CAAC,CAAA;6CAFtB,0BAAe;GAFhB,qBAAqB,CAUjC;AAVY,sDAAqB","sourcesContent":["import {Configuration, GlobalProviders, Inject, OverrideProvider} from \"@tsed/di\";\nimport * as Express from \"express\";\nimport {PLATFORM_ROUTER_OPTIONS, PlatformHandler, PlatformRouter} from \"../../platform\";\n\ndeclare global {\n  namespace TsED {\n    export interface Router extends Express.Router {}\n  }\n}\n\n@OverrideProvider(PlatformRouter)\nexport class PlatformExpressRouter extends PlatformRouter {\n  constructor(\n    platform: PlatformHandler,\n    @Configuration() configuration: Configuration,\n    @Inject(PLATFORM_ROUTER_OPTIONS) routerOptions: any\n  ) {\n    super(platform);\n\n    this.raw = Express.Router(Object.assign({}, configuration.routers, routerOptions));\n  }\n}\n"]}