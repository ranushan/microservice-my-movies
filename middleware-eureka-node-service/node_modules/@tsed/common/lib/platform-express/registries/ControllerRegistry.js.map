{"version":3,"file":"ControllerRegistry.js","sourceRoot":"","sources":["../../../src/platform-express/registries/ControllerRegistry.ts"],"names":[],"mappings":";;AAAA,iCAAwE;AAExE,+DAA0D;AAE1D,MAAM,EAAC,QAAQ,EAAC,GAAQ,oBAAe,CAAC,mBAAmB,CAAC,iBAAY,CAAC,UAAU,CAAC,CAAC;AAErF,oBAAe,CAAC,mBAAmB,CAAC,iBAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,GAAG,CACtE,QAA4B,EAC5B,MAA4B,EAC5B,IAAW,EACX,EAAE;IACF,MAAM,CAAC,GAAG,CAAC,6BAAa,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC3C,QAAQ,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AACnC,CAAC,CAAC","sourcesContent":["import {GlobalProviders, LocalsContainer, ProviderType} from \"@tsed/di\";\nimport {ControllerProvider} from \"../../platform\";\nimport {ExpressRouter} from \"../decorators/ExpressRouter\";\n\nconst {onInvoke}: any = GlobalProviders.getRegistrySettings(ProviderType.CONTROLLER);\n\nGlobalProviders.getRegistrySettings(ProviderType.CONTROLLER).onInvoke = (\n  provider: ControllerProvider,\n  locals: LocalsContainer<any>,\n  deps: any[]\n) => {\n  locals.set(ExpressRouter, provider.router);\n  onInvoke(provider, locals, deps);\n};\n"]}