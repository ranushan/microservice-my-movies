{"version":3,"file":"createExpressApplication.js","sourceRoot":"","sources":["../../../src/platform-express/utils/createExpressApplication.ts"],"names":[],"mappings":";;AAAA,iCAA0E;AAC1E,qFAAgF;AAChF,yEAAoE;AAEpE,SAAgB,wBAAwB,CAAC,QAAyB;IAChE,QAAQ,CAAC,YAAY,CAAC,uCAAkB,CAAC,CAAC;AAC5C,CAAC;AAFD,4DAEC;AAED,qBAAgB,CAAC;IACf,OAAO,EAAE,uCAAkB;IAC3B,IAAI,EAAE,CAAC,yCAAmB,CAAC;IAC3B,KAAK,EAAE,kBAAa,CAAC,SAAS;IAC9B,MAAM,EAAE,IAAI;IACZ,UAAU,CAAC,mBAAwC;QACjD,OAAO,mBAAmB,CAAC,GAAG,CAAC;IACjC,CAAC;CACF,CAAC,CAAC","sourcesContent":["import {InjectorService, ProviderScope, registerProvider} from \"@tsed/di\";\nimport {PlatformApplication} from \"../../platform/services/PlatformApplication\";\nimport {ExpressApplication} from \"../decorators/expressApplication\";\n\nexport function createExpressApplication(injector: InjectorService): void {\n  injector.forkProvider(ExpressApplication);\n}\n\nregisterProvider({\n  provide: ExpressApplication,\n  deps: [PlatformApplication],\n  scope: ProviderScope.SINGLETON,\n  global: true,\n  useFactory(platformApplication: PlatformApplication) {\n    return platformApplication.raw;\n  }\n});\n"]}