{"version":3,"file":"LogIncomingRequestMiddleware.js","sourceRoot":"","sources":["../../../src/platform-express/middlewares/LogIncomingRequestMiddleware.ts"],"names":[],"mappings":"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","sourcesContent":["import {InjectorService} from \"@tsed/di\";\nimport {ILoggerSettings} from \"../../config/interfaces/ILoggerSettings\";\nimport {IMiddleware, Middleware, Req, Res} from \"../../mvc\";\n\n/**\n * @middleware\n */\n@Middleware()\nexport class LogIncomingRequestMiddleware implements IMiddleware {\n  protected static DEFAULT_FIELDS = [\"reqId\", \"method\", \"url\", \"duration\"];\n  $onResponse: any;\n  protected settings: ILoggerSettings;\n\n  // tslint:disable-next-line: no-unused-variable\n  constructor(injector: InjectorService) {\n    this.settings = injector.settings.logger || {};\n    this.settings.requestFields = this.settings.requestFields || LogIncomingRequestMiddleware.DEFAULT_FIELDS;\n\n    if (this.settings.level !== \"off\") {\n      this.$onResponse = this.onLogEnd;\n    }\n  }\n\n  /**\n   * Handle the request.\n   * @param {e.Request} request\n   */\n  public use(@Req() request: Req): void {\n    this.configureRequest(request);\n    this.onLogStart(request);\n  }\n\n  /**\n   * The separate onLogStart() function will allow developer to overwrite the initial request log.\n   * @param {e.Request} request\n   */\n  protected onLogStart(request: Req) {\n    const {debug, logRequest, logStart} = this.settings;\n\n    if (logStart !== false) {\n      if (debug) {\n        request.ctx.logger.debug({\n          event: \"request.start\"\n        });\n      } else if (logRequest) {\n        request.ctx.logger.info({\n          event: \"request.start\"\n        });\n      }\n    }\n  }\n\n  /**\n   * Called when the `$onResponse` is called by Ts.ED (through Express.end).\n   * @param request\n   * @param response\n   */\n  protected onLogEnd(request: Req, response: Res) {\n    const {debug, logRequest, logEnd} = this.settings;\n\n    if (logEnd !== false) {\n      if (debug) {\n        request.ctx.logger.debug({\n          event: \"request.end\",\n          status: response.statusCode,\n          data: request.ctx.data\n        });\n      } else if (logRequest) {\n        request.ctx.logger.info({\n          event: \"request.end\",\n          status: response.statusCode\n        });\n      }\n    }\n\n    request.ctx.logger.flush();\n  }\n\n  /**\n   * Attach all information that will be necessary to log the request. Attach a new `request.log` object.\n   * @param request\n   */\n  protected configureRequest(request: Req) {\n    const minimalInfo = this.minimalRequestPicker(request);\n    const requestObj = this.requestToObject(request);\n\n    request.ctx.logger.minimalRequestPicker = (obj: any) => ({...minimalInfo, ...obj});\n    request.ctx.logger.completeRequestPicker = (obj: any) => ({...requestObj, ...obj});\n  }\n\n  /**\n   * Return complete request info.\n   * @param request\n   * @returns {Object}\n   */\n  protected requestToObject(request: Req): any {\n    return {\n      method: request.method,\n      url: request.originalUrl || request.url,\n      headers: request.headers,\n      body: request.body,\n      query: request.query,\n      params: request.params\n    };\n  }\n\n  /**\n   * Return a filtered request from global configuration.\n   * @param request\n   * @returns {Object}\n   */\n  protected minimalRequestPicker(request: Req): any {\n    const {requestFields} = this.settings;\n    const info = this.requestToObject(request);\n\n    return requestFields!.reduce((acc: any, key: string) => {\n      acc[key] = info[key];\n\n      return acc;\n    }, {});\n  }\n}\n"]}