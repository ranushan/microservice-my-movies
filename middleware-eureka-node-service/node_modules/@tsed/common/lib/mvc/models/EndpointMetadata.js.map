{"version":3,"file":"EndpointMetadata.js","sourceRoot":"","sources":["../../../src/mvc/models/EndpointMetadata.ts"],"names":[],"mappings":"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","sourcesContent":["import {deepExtends, Enumerable, isArrayOrArrayClass, isPromise, Metadata, NotEnumerable, Storable, Store, Type} from \"@tsed/core\";\nimport {EXPRESS_METHODS} from \"../constants\";\nimport {IPathMethod} from \"../interfaces/IPathMethod\";\nimport {IResponseOptions} from \"../interfaces/IResponseOptions\";\nimport {ParamRegistry} from \"../registries/ParamRegistry\";\n\nexport interface EndpointConstructorOptions {\n  target: Type<any>;\n  propertyKey: string | symbol;\n  beforeMiddlewares?: any[];\n  middlewares?: any[];\n  afterMiddlewares?: any[];\n  pathsMethods?: IPathMethod[];\n  type?: any;\n  parent?: EndpointMetadata;\n  responses?: Map<number, IResponseOptions>;\n  statusCode?: number;\n}\n\n/**\n * EndpointMetadata contains metadata about a controller and his method.\n * Each annotation (@Get, @Body...) attached to a method are stored in a endpoint.\n * EndpointMetadata convert this metadata to an array which contain arguments to call an Express method.\n *\n * Example :\n *\n *    @Controller(\"/my-path\")\n *    provide MyClass {\n *\n *        @Get(\"/\")\n *        @Authenticated()\n *        public myMethod(){}\n *    }\n *\n */\nexport class EndpointMetadata extends Storable implements EndpointConstructorOptions {\n  // LIFECYCLE\n  @Enumerable()\n  public beforeMiddlewares: any[] = [];\n\n  @Enumerable()\n  public middlewares: any[] = [];\n\n  @Enumerable()\n  public afterMiddlewares: any[] = [];\n  /**\n   * Route strategy.\n   */\n  @Enumerable()\n  public pathsMethods: IPathMethod[] = [];\n\n  @Enumerable()\n  readonly responses: Map<number, IResponseOptions> = new Map();\n\n  @Enumerable()\n  public statusCode: number = 200;\n  /**\n   * Endpoint inherited from parent class.\n   */\n  @NotEnumerable()\n  readonly parent: EndpointMetadata | undefined;\n\n  constructor(options: EndpointConstructorOptions) {\n    super(options.target, options.propertyKey, Object.getOwnPropertyDescriptor(options.target, options.propertyKey));\n\n    const {\n      target,\n      parent,\n      statusCode,\n      responses,\n      propertyKey,\n      beforeMiddlewares = [],\n      middlewares = [],\n      afterMiddlewares = [],\n      pathsMethods = [],\n      type\n    } = options;\n\n    this._type = Metadata.getReturnType(target, propertyKey);\n\n    this.beforeMiddlewares = beforeMiddlewares;\n    this.middlewares = middlewares;\n    this.afterMiddlewares = afterMiddlewares;\n    this.pathsMethods = pathsMethods;\n    this.type = type;\n    this.parent = parent;\n    statusCode && (this.statusCode = statusCode);\n\n    if (responses) {\n      this.responses = responses;\n    } else {\n      this.responses.set(this.statusCode, {\n        code: this.statusCode\n      } as any);\n    }\n  }\n\n  get type(): Type<any> {\n    return isPromise(this._type) || isArrayOrArrayClass(this._type) || this._type === Object ? undefined! : this._type;\n  }\n\n  set type(type: Type<any>) {\n    this._type = type;\n  }\n\n  /**\n   * @deprecated\n   */\n  get methodClassName(): string {\n    return String(this.propertyKey);\n  }\n\n  /**\n   *\n   * @returns {Store}\n   */\n  get store(): Store {\n    return this.parent ? this.parent.store : this._store;\n  }\n\n  get params() {\n    return ParamRegistry.getParams(this.target, this.propertyKey);\n  }\n\n  get response() {\n    return this.responses.get(this.statusCode)!;\n  }\n\n  /**\n   * Find the a value at the controller level. Let this value be extended or overridden by the endpoint itself.\n   *\n   * @param key\n   * @returns {any}\n   */\n  get(key: any) {\n    const ctrlValue = Store.from(this.target).get(key);\n    let meta = deepExtends(undefined, ctrlValue);\n    const endpointValue = this.store.get(key);\n    if (endpointValue !== undefined) {\n      meta = deepExtends(meta, endpointValue);\n    }\n\n    return meta;\n  }\n\n  /**\n   * Change the type and the collection type from the status code.\n   * @param {string | number} code\n   * @deprecated Use endpoint.responses.get(code)\n   */\n  public statusResponse(code: string | number) {\n    if (code && this.responses.has(+code)) {\n      const {type, collectionType} = this.responses.get(+code)!;\n      this.type = type;\n      this.collectionType = collectionType;\n    } else {\n      const {type, collectionType} = this.responses.get(this.statusCode) || {};\n      this.type = type;\n      this.collectionType = collectionType;\n    }\n\n    return this.responses.get(+code) || {};\n  }\n\n  /**\n   *\n   * @param args\n   * @returns {EndpointMetadata}\n   */\n  public before(args: any[]): this {\n    this.beforeMiddlewares = this.beforeMiddlewares.concat(args);\n\n    return this;\n  }\n\n  /**\n   *\n   * @param args\n   * @returns {EndpointMetadata}\n   */\n  public after(args: any[]): this {\n    this.afterMiddlewares = this.afterMiddlewares.concat(args);\n\n    return this;\n  }\n\n  /**\n   * Store all arguments collected via Annotation.\n   * @param args\n   */\n  public merge(args: any[]): this {\n    const expressMethods: any = {};\n\n    const filteredArg = args.filter((arg: any) => {\n      if (typeof arg === \"string\" && EXPRESS_METHODS.indexOf(arg) > -1) {\n        expressMethods.method = arg;\n\n        return false;\n      }\n\n      if (typeof arg === \"string\" || arg instanceof RegExp) {\n        expressMethods.path = arg;\n\n        return false;\n      }\n\n      return !!arg;\n    });\n\n    if (expressMethods.method || expressMethods.path) {\n      this.pathsMethods.push(expressMethods);\n    }\n\n    this.middlewares = this.middlewares.concat(filteredArg);\n\n    return this;\n  }\n}\n"]}