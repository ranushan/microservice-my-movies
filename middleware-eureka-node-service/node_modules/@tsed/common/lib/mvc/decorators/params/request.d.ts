import { Type } from "@tsed/core";
import { IParamOptions } from "../../interfaces/IParamOptions";
declare global {
    namespace TsED {
        interface Request {
            aborted: boolean;
        }
    }
}
export interface Request extends TsED.Request {
}
export interface Req extends TsED.Request {
}
/**
 * Request service.
 * @returns {function(Function, (string|symbol), number): void}
 * @decorator
 */
export declare function Request(expression: string, useType: Type<any>): ParameterDecorator;
export declare function Request(expression: string): ParameterDecorator;
export declare function Request(useType: Type<any>): ParameterDecorator;
export declare function Request(options: IParamOptions<any>): ParameterDecorator;
export declare function Request(): ParameterDecorator;
/**
 * Request service.
 * @returns {function(Function, (string|symbol), number): void}
 * @decorator
 * @alias Request
 */
export declare function Req(expression: string, useType: Type<any>): ParameterDecorator;
export declare function Req(expression: string): ParameterDecorator;
export declare function Req(useType: Type<any>): ParameterDecorator;
export declare function Req(options: IParamOptions<any>): ParameterDecorator;
export declare function Req(): ParameterDecorator;
