{"version":3,"file":"paramFn.js","sourceRoot":"","sources":["../../../../src/mvc/decorators/params/paramFn.ts"],"names":[],"mappings":";;AAAA,qCAAuE;AAEvE,kEAA6D;AAE7D;;;;GAIG;AACH,SAAgB,OAAO,CAAC,EAAmE;IACzF,OAAO,CAAI,MAAiB,EAAE,WAAmB,EAAE,KAAa,EAAQ,EAAE;QACxE,IAAI,uBAAgB,CAAC,CAAC,MAAM,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,KAAK,WAAW,EAAE;YAClE,EAAE,CAAC,6BAAa,CAAC,GAAG,CAAC,MAAO,EAAE,WAAY,EAAE,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;SACnF;IACH,CAAC,CAAC;AACJ,CAAC;AAND,0BAMC","sourcesContent":["import {DecoratorParameters, getDecoratorType, Type} from \"@tsed/core\";\nimport {ParamMetadata} from \"../../models/ParamMetadata\";\nimport {ParamRegistry} from \"../../registries/ParamRegistry\";\n\n/**\n * Return the paramMetadata\n * @param fn\n * @decorator\n */\nexport function ParamFn(fn: (param: ParamMetadata, parameters: DecoratorParameters) => void) {\n  return <T>(target: Type<any>, propertyKey: string, index: number): void => {\n    if (getDecoratorType([target, propertyKey, index]) === \"parameter\") {\n      fn(ParamRegistry.get(target!, propertyKey!, index), [target, propertyKey, index]);\n    }\n  };\n}\n"]}