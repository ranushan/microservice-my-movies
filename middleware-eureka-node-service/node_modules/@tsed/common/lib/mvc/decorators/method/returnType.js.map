{"version":3,"file":"returnType.js","sourceRoot":"","sources":["../../../../src/mvc/decorators/method/returnType.ts"],"names":[],"mappings":";;AAAA,qCAAkD;AAElD,6CAAwC;AAExC,MAAM,eAAe,GAAG,CAAC,IAAwB,EAAE,EAAE,CAAC,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC;AAExF;;;;;;;;;;;;;;;;;GAiBG;AACH,SAAgB,UAAU,CAAC,WAAsC,EAAE;IACjE,OAAO,uBAAU,CAAC,QAAQ,CAAC,EAAE;QAC3B,MAAM,EAAC,SAAS,EAAE,UAAU,EAAC,GAAG,QAAQ,CAAC;QACzC,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,UAAU,CAAC,CAAC,WAAW;QAErD,IAAI,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;YAClC,MAAM,EAAC,QAAQ,EAAC,GAAG,QAAQ,CAAC;YAC5B,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC7B,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;YAC3B,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;SACxC;QAED,QAAQ,mBACN,IAAI,EACJ,WAAW,EAAE,EAAE,IACZ,gBAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,kBAAW,CAAC,QAAQ,CAAC,CAAC,CACxD,CAAC;QAEF,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAK,EAAE,QAA4B,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC;AACL,CAAC;AApBD,gCAoBC","sourcesContent":["import {cleanObject, deepMerge} from \"@tsed/core\";\nimport {IResponseOptions} from \"../../interfaces/IResponseOptions\";\nimport {EndpointFn} from \"./endpointFn\";\n\nconst isSuccessStatus = (code: number | undefined) => code && 200 <= code && code < 300;\n\n/**\n * Define the returned type for the serialization.\n *\n * ```typescript\n * @Controller('/')\n * export class Ctrl {\n *    @Get('/')\n *    @ReturnType({code: 200, type: User, collectionType: Map})\n *    get(): Promise<Map<User>> { }\n * }\n *\n * ```\n *\n * @returns {Function}\n * @param response\n * @decorator\n * @endpoint\n */\nexport function ReturnType(response: Partial<IResponseOptions> = {}): Function {\n  return EndpointFn(endpoint => {\n    const {responses, statusCode} = endpoint;\n    const code = response.code || statusCode; // implicit\n\n    if (isSuccessStatus(response.code)) {\n      const {response} = endpoint;\n      responses.delete(statusCode);\n      endpoint.statusCode = code;\n      endpoint.responses.set(code, response);\n    }\n\n    response = {\n      code,\n      description: \"\",\n      ...deepMerge(endpoint.get(code), cleanObject(response))\n    };\n\n    endpoint.responses.set(response.code!, response as IResponseOptions);\n  });\n}\n"]}