{"version":3,"file":"RequiredPropertyError.js","sourceRoot":"","sources":["../../../src/converters/errors/RequiredPropertyError.ts"],"names":[],"mappings":";;AAAA,qCAAwC;AACxC,sEAAiE;AAEjE;;GAEG;AACH,MAAa,qBAAsB,SAAQ,iCAAe;IAGxD,YAAY,MAAiB,EAAE,YAA6B,EAAE,KAAU;QACtE,KAAK,CAAC,YAAY,YAAsB,aAAa,aAAM,CAAC,MAAM,CAAC,8BAA8B,KAAK,EAAE,EAAE;YACxG;gBACE,QAAQ,EAAE,EAAE;gBACZ,OAAO,EAAE,UAAU;gBACnB,OAAO,EAAE,kCAAkC,MAAM,CAAC,YAAY,CAAC,GAAG;gBAClE,SAAS,EAAE,aAAM,CAAC,MAAM,CAAC;gBACzB,MAAM,EAAE;oBACN,eAAe,EAAE,YAAY;iBAC9B;gBACD,UAAU,EAAE,YAAY;aACzB;SACF,CAAC,CAAC;IACL,CAAC;CACF;AAjBD,sDAiBC","sourcesContent":["import {nameOf, Type} from \"@tsed/core\";\nimport {ValidationError} from \"../../mvc/errors/ValidationError\";\n\n/**\n * @deprecated Ajv or validation library must perform this validation\n */\nexport class RequiredPropertyError extends ValidationError {\n  errors: any[];\n\n  constructor(target: Type<any>, propertyName: string | symbol, value: any) {\n    super(`Property ${propertyName as string} on class ${nameOf(target)} is required. Given value: ${value}`, [\n      {\n        dataPath: \"\",\n        keyword: \"required\",\n        message: `should have required property '${String(propertyName)}'`,\n        modelName: nameOf(target),\n        params: {\n          missingProperty: propertyName\n        },\n        schemaPath: \"#/required\"\n      }\n    ]);\n  }\n}\n"]}