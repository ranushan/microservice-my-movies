import { InjectorService } from "@tsed/di";
import { HandlerMetadata } from "../../mvc/models/HandlerMetadata";
import { IHandlerContext } from "../interfaces/IHandlerContext";
export declare class HandlerContext {
    injector: InjectorService;
    metadata: HandlerMetadata;
    request: TsED.Request;
    response: TsED.Response;
    err: any;
    args: any[];
    private _isDone;
    private _next;
    constructor({ injector, request, response, next, err, metadata, args }: IHandlerContext);
    get isDone(): boolean;
    get container(): import("@tsed/di").LocalsContainer<any>;
    done(error: any, result?: any): any;
    handle(process: any): any;
    /**
     *
     */
    callHandler(): Promise<void>;
    next(error?: any): any;
    destroy(): void;
}
