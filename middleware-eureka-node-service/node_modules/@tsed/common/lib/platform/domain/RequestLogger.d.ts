import { LogLevel } from "@tsed/logger";
export declare class RequestLogger {
    private logger;
    readonly id: string;
    readonly url: string;
    readonly startDate: Date;
    maxStackSize: number;
    minimalRequestPicker: Function;
    completeRequestPicker: Function;
    private readonly ignoreUrlPatterns;
    private stack;
    private level;
    constructor(logger: any, { id, startDate, url, ignoreUrlPatterns, minimalRequestPicker, completeRequestPicker, level, maxStackSize }: any);
    info(obj: any): void;
    debug(obj: any, withRequest?: boolean): void;
    warn(obj: any): void;
    error(obj: any): void;
    trace(obj: any): void;
    flush(): void;
    isLevelEnabled(otherLevel: string | LogLevel): boolean;
    destroy(): void;
    /**
     * Return the duration between the time when LogIncomingRequest has handle the request and now.
     * @returns {number}
     */
    protected getDuration(): number;
    protected getData(obj: any): any;
    protected run(level: LogLevel, cb: Function): void;
}
