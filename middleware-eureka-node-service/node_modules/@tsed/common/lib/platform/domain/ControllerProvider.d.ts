import { Type } from "@tsed/core";
import { Provider } from "@tsed/di";
import { IRouterSettings } from "../../config/interfaces";
import { EndpointMetadata, IControllerMiddlewares } from "../../mvc";
import { IPlatformDriver } from "../interfaces/IPlatformDriver";
export interface IChildrenController extends Type<any> {
    $parentCtrl?: ControllerProvider;
}
export declare class ControllerProvider extends Provider<any> {
    router: IPlatformDriver;
    /**
     * The path for the controller
     */
    path: string;
    /**
     * Controllers that depend to this controller.
     * @type {Array}
     * @private
     */
    private _children;
    constructor(provide: any);
    /**
     *
     * @returns {Endpoint[]}
     */
    get endpoints(): EndpointMetadata[];
    /**
     *
     * @returns {Type<any>[]}
     */
    get children(): IChildrenController[];
    /**
     *
     * @param children
     */
    set children(children: IChildrenController[]);
    /**
     *
     * @returns {IRouterSettings}
     */
    get routerOptions(): IRouterSettings;
    /**
     *
     * @param value
     */
    set routerOptions(value: IRouterSettings);
    /**
     *
     * @returns {ControllerProvider}
     */
    get parent(): any;
    /**
     *
     * @returns {any[]}
     */
    get middlewares(): IControllerMiddlewares;
    /**
     *
     * @param middlewares
     */
    set middlewares(middlewares: IControllerMiddlewares);
    /**
     * Resolve final endpoint url.
     */
    getEndpointUrl(routerPath?: string): string;
    /**
     *
     */
    hasEndpointUrl(): boolean;
    /**
     *
     * @returns {boolean}
     */
    hasChildren(): boolean;
    /**
     *
     * @returns {boolean}
     */
    hasParent(): boolean;
}
