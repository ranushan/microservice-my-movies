"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class PlatformDriver {
    constructor(platformHandler) {
        this.platformHandler = platformHandler;
    }
    callback() {
        return this.raw;
    }
    use(...handlers) {
        // @ts-ignore
        this.raw.use(...this.mapHandlers(handlers));
        return this;
    }
    addRoute({ method, path, handlers }) {
        // @ts-ignore
        this.raw[method](path, ...this.mapHandlers(handlers));
        return this;
    }
    all(path, ...handlers) {
        return this.addRoute({ method: "all", path, handlers });
    }
    get(path, ...handlers) {
        return this.addRoute({ method: "get", path, handlers });
    }
    post(path, ...handlers) {
        return this.addRoute({ method: "post", path, handlers });
    }
    put(path, ...handlers) {
        return this.addRoute({ method: "put", path, handlers });
    }
    delete(path, ...handlers) {
        return this.addRoute({ method: "delete", path, handlers });
    }
    patch(path, ...handlers) {
        return this.addRoute({ method: "patch", path, handlers });
    }
    head(path, ...handlers) {
        return this.addRoute({ method: "head", path, handlers });
    }
    options(path, ...handlers) {
        return this.addRoute({ method: "options", path, handlers });
    }
    mapHandlers(handlers) {
        return handlers.map(handler => {
            if (typeof handler === "string") {
                return handler;
            }
            if (handler instanceof PlatformDriver) {
                return handler.callback();
            }
            return this.platformHandler.createHandler(handler);
        });
    }
}
exports.PlatformDriver = PlatformDriver;
//# sourceMappingURL=PlatformDriver.js.map