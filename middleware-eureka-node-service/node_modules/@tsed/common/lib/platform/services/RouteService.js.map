{"version":3,"file":"RouteService.js","sourceRoot":"","sources":["../../../src/platform/services/RouteService.ts"],"names":[],"mappings":";;;AAAA,iCAAmD;AAEnD,yCAAoC;AAEpC;;;GAGG;AAEH,IAAa,YAAY,GAAzB,MAAa,YAAY;IACvB,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAE1C,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC9B,CAAC;IAEM,SAAS,CAAC,MAAgB;QAC/B,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAED;;;;OAIG;IACI,QAAQ,CAAC,QAAgB,EAAE,KAAoB;QACpD,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;IAED;;;OAGG;IACI,SAAS;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;IACnC,CAAC;IAED;;OAEG;IACI,MAAM;QACX,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;IAC1B,CAAC;CACF,CAAA;AAlCY,YAAY;IADxB,eAAU,EAAE;6CAEmB,mBAAQ;GAD3B,YAAY,CAkCxB;AAlCY,oCAAY","sourcesContent":["import {Injectable, TokenProvider} from \"@tsed/di\";\nimport {IRoute, IRouteController, IRouteDetails} from \"../interfaces/IRoute\";\nimport {Platform} from \"./Platform\";\n\n/**\n * `RouteService` is used to provide all routes collected by annotation `@Controller`.\n * @deprecated Use Platform instead\n */\n@Injectable()\nexport class RouteService {\n  constructor(private platform: Platform) {}\n\n  get routes(): IRouteController[] {\n    return this.platform.routes;\n  }\n\n  public addRoutes(routes: IRoute[]) {\n    return this.platform.addRoutes(routes);\n  }\n\n  /**\n   * Add a new route in the route registry\n   * @param endpoint\n   * @param token\n   */\n  public addRoute(endpoint: string, token: TokenProvider) {\n    return this.platform.addRoute(endpoint, token);\n  }\n\n  /**\n   * Get all routes built by TsExpressDecorators and mounted on Express application.\n   * @returns {IRouteDetails[]}\n   */\n  public getRoutes(): IRouteDetails[] {\n    return this.platform.getRoutes();\n  }\n\n  /**\n   * @deprecated Use getRoutes instead of\n   */\n  public getAll() {\n    return this.getRoutes();\n  }\n}\n"]}