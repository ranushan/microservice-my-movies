import { InjectorService } from "@tsed/di";
import { PlatformDriver } from "./PlatformDriver";
import { PlatformHandler } from "./PlatformHandler";
export declare const PLATFORM_ROUTER_OPTIONS: unique symbol;
declare global {
    namespace TsED {
        interface Router {
        }
    }
}
export declare class PlatformRouter extends PlatformDriver<TsED.Router> {
    constructor(platform: PlatformHandler);
    /**
     * Create a new instance of PlatformRouter
     * @param injector
     * @param routerOptions
     */
    static create(injector: InjectorService, routerOptions: any): PlatformRouter;
    protected static createRawRouter(): any;
}
