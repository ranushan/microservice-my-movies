{"version":3,"file":"PlatformDriver.js","sourceRoot":"","sources":["../../../src/platform/services/PlatformDriver.ts"],"names":[],"mappings":";;AAIA,MAAa,cAAc;IAGzB,YAAsB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAG,CAAC;IAE1D,QAAQ;QACN,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAED,GAAG,CAAC,GAAG,QAAe;QACpB,aAAa;QACb,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE5C,OAAO,IAAI,CAAC;IACd,CAAC;IAED,QAAQ,CAAC,EAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAwB;QACtD,aAAa;QACb,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEtD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,GAAG,CAAC,IAAoB,EAAE,GAAG,QAAe;QAC1C,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC;IACxD,CAAC;IAED,GAAG,CAAC,IAAoB,EAAE,GAAG,QAAe;QAC1C,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC;IACxD,CAAC;IAED,IAAI,CAAC,IAAoB,EAAE,GAAG,QAAe;QAC3C,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC;IACzD,CAAC;IAED,GAAG,CAAC,IAAoB,EAAE,GAAG,QAAe;QAC1C,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC;IACxD,CAAC;IAED,MAAM,CAAC,IAAoB,EAAE,GAAG,QAAe;QAC7C,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,IAAoB,EAAE,GAAG,QAAe;QAC5C,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC;IAC1D,CAAC;IAED,IAAI,CAAC,IAAoB,EAAE,GAAG,QAAe;QAC3C,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC;IACzD,CAAC;IAED,OAAO,CAAC,IAAoB,EAAE,GAAG,QAAe;QAC9C,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC;IAC5D,CAAC;IAED,WAAW,CAAC,QAAe;QACzB,OAAO,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;YAC5B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAC/B,OAAO,OAAO,CAAC;aAChB;YAED,IAAI,OAAO,YAAY,cAAc,EAAE;gBACrC,OAAO,OAAO,CAAC,QAAQ,EAAE,CAAC;aAC3B;YAED,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AApED,wCAoEC","sourcesContent":["import {PathParamsType} from \"../../mvc\";\nimport {IPlatformDriver, IPlatformRouteOptions} from \"../interfaces/IPlatformDriver\";\nimport {PlatformHandler} from \"./PlatformHandler\";\n\nexport class PlatformDriver<T> implements IPlatformDriver<T> {\n  public raw: T;\n\n  constructor(protected platformHandler: PlatformHandler) {}\n\n  callback(): any {\n    return this.raw;\n  }\n\n  use(...handlers: any[]) {\n    // @ts-ignore\n    this.raw.use(...this.mapHandlers(handlers));\n\n    return this;\n  }\n\n  addRoute({method, path, handlers}: IPlatformRouteOptions) {\n    // @ts-ignore\n    this.raw[method](path, ...this.mapHandlers(handlers));\n\n    return this;\n  }\n\n  all(path: PathParamsType, ...handlers: any[]) {\n    return this.addRoute({method: \"all\", path, handlers});\n  }\n\n  get(path: PathParamsType, ...handlers: any[]) {\n    return this.addRoute({method: \"get\", path, handlers});\n  }\n\n  post(path: PathParamsType, ...handlers: any[]) {\n    return this.addRoute({method: \"post\", path, handlers});\n  }\n\n  put(path: PathParamsType, ...handlers: any[]) {\n    return this.addRoute({method: \"put\", path, handlers});\n  }\n\n  delete(path: PathParamsType, ...handlers: any[]) {\n    return this.addRoute({method: \"delete\", path, handlers});\n  }\n\n  patch(path: PathParamsType, ...handlers: any[]) {\n    return this.addRoute({method: \"patch\", path, handlers});\n  }\n\n  head(path: PathParamsType, ...handlers: any[]) {\n    return this.addRoute({method: \"head\", path, handlers});\n  }\n\n  options(path: PathParamsType, ...handlers: any[]) {\n    return this.addRoute({method: \"options\", path, handlers});\n  }\n\n  mapHandlers(handlers: any[]): any[] {\n    return handlers.map(handler => {\n      if (typeof handler === \"string\") {\n        return handler;\n      }\n\n      if (handler instanceof PlatformDriver) {\n        return handler.callback();\n      }\n\n      return this.platformHandler.createHandler(handler);\n    });\n  }\n}\n"]}