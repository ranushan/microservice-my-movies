"use strict";
var PlatformRouter_1;
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const di_1 = require("@tsed/di");
const FakeRawDriver_1 = require("./FakeRawDriver");
const PlatformDriver_1 = require("./PlatformDriver");
const PlatformHandler_1 = require("./PlatformHandler");
exports.PLATFORM_ROUTER_OPTIONS = Symbol.for("PlatformRouterOptions");
let PlatformRouter = PlatformRouter_1 = class PlatformRouter extends PlatformDriver_1.PlatformDriver {
    constructor(platform) {
        super(platform);
        this.raw = PlatformRouter_1.createRawRouter();
    }
    /**
     * Create a new instance of PlatformRouter
     * @param injector
     * @param routerOptions
     */
    static create(injector, routerOptions) {
        const locals = new Map();
        locals.set(exports.PLATFORM_ROUTER_OPTIONS, routerOptions);
        return injector.invoke(PlatformRouter_1, locals);
    }
    static createRawRouter() {
        return FakeRawDriver_1.createFakeRawDriver();
    }
};
PlatformRouter = PlatformRouter_1 = tslib_1.__decorate([
    di_1.Injectable({
        scope: di_1.ProviderScope.INSTANCE
    }),
    tslib_1.__metadata("design:paramtypes", [PlatformHandler_1.PlatformHandler])
], PlatformRouter);
exports.PlatformRouter = PlatformRouter;
//# sourceMappingURL=PlatformRouter.js.map